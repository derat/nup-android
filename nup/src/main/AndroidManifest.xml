<?xml version="1.0" encoding="utf-8" ?>
<manifest
  xmlns:android="http://schemas.android.com/apk/res/android"
  xmlns:tools="http://schemas.android.com/tools"
  package="org.erat.nup"
>
  <application
    android:label="@string/app_name"
    android:icon="@mipmap/launcher"
    android:hardwareAccelerated="true"
    android:debuggable="true"
  >
    <service
      android:name=".NupService"
      android:enabled="true"
      android:exported="true"
      tools:ignore="ExportedService"
    >
      <intent-filter>
        <action android:name="android.media.browse.MediaBrowserService" />
        <action android:name="android.intent.action.MEDIA_BUTTON" />
      </intent-filter>
    </service>

    <activity
      android:name=".NupActivity"
      android:label="@string/app_name"
      android:launchMode="singleTask"
      android:theme="@style/AppTheme"
    >
      <intent-filter>
        <action android:name="android.intent.action.MAIN" />
        <category android:name="android.intent.category.LAUNCHER" />
      </intent-filter>

      <!-- Per https://stackoverflow.com/a/31976075/6882947, this is needed to convince
           Android Audio to send the search to the *service* via onPlayFromSearch().
           Non-Auto things (Assistant?) apparently still call the activity, though. -->
      <intent-filter>
        <action android:name="android.media.action.MEDIA_PLAY_FROM_SEARCH" />
        <category android:name="android.intent.category.DEFAULT" />
      </intent-filter>
    </activity>

    <activity android:name=".SearchResultsActivity" android:theme="@style/AppTheme">
      <intent-filter>
        <action android:name="android.intent.action.SEARCH" />
      </intent-filter>
      <meta-data android:name="android.app.searchable" android:resource="@xml/searchable" />
    </activity>

    <activity android:name=".BrowseAlbumsActivity" android:theme="@style/AppTheme" />
    <activity android:name=".BrowseArtistsActivity" android:theme="@style/AppTheme" />
    <activity android:name=".BrowseSongsActivity" android:theme="@style/AppTheme" />
    <activity android:name=".BrowseTopActivity" android:theme="@style/AppTheme" />
    <activity android:name=".SearchFormActivity" android:theme="@style/AppTheme" />
    <activity android:name=".SettingsActivity" android:theme="@style/AppTheme" />

    <receiver android:name="androidx.media.session.MediaButtonReceiver">
      <intent-filter>
        <action android:name="android.intent.action.MEDIA_BUTTON" />
      </intent-filter>
    </receiver>

    <meta-data
      android:name="android.app.default_searchable"
      android:value=".SearchResultsActivity"
    />

    <!-- To actually get the app to appear in Android Auto, one needs to also enable developer
         mode in the app (go to "Settings" and tap "Version" 10 times) and then go to the new
         "Developer settings" item hidden in the Settings activity's menu and enable "Unknown
         sources". Note also that the AA app launches the most-recently-used activity by default;
         there's a tiny arrow icon for switching. -->
    <meta-data
      android:name="com.google.android.gms.car.application"
      android:resource="@xml/automotive_app_desc"
    />
    <meta-data
      android:name="com.google.android.gms.car.notification.SmallIcon"
      android:resource="@drawable/launcher"
    />
  </application>

  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
  <uses-permission android:name="android.permission.BLUETOOTH" />
  <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
  <uses-permission android:name="android.permission.INTERNET" />
  <uses-permission android:name="android.permission.READ_PHONE_STATE" />
  <uses-permission android:name="android.permission.WAKE_LOCK" />
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
</manifest>
